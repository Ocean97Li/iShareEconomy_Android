package com.ocean.ishareeconomy_android.utils

import com.ocean.ishareeconomy_android.database.entities.DatabaseLendObject
import com.ocean.ishareeconomy_android.database.entities.DatabaseObjectUser
import com.ocean.ishareeconomy_android.database.entities.DatabaseUser
import com.ocean.ishareeconomy_android.models.LendingObject
import com.ocean.ishareeconomy_android.models.ObjectUser
import com.ocean.ishareeconomy_android.models.User
import java.sql.Date

/**
 * Convert Domain objects into to database objects
 */

fun List<User>.asDatabaseModel(): Array<DatabaseUser> {
    return map {
        DatabaseUser (
                user_id = it.id,
                firstname = it.firstName,
                lastname = it.lastName,
                username = it.username,
                address = it.address,
                rating = it.rating,
                distance = it.distance
        )
    }.toTypedArray()
}

fun LendingObject.asDatabaseModel(): DatabaseLendObject {
    return DatabaseLendObject(
        object_id = this.id,
        object_owner_id = this.owner.id,
        object_owner_name = this.owner.name,
        name = this.name,
        description = this.description,
        type = this.type
    )
}

fun List<LendingObject>.asDatabaseModel(): Array<DatabaseLendObject> {
    return map {
        DatabaseLendObject (
            object_id = it.id,
            name = it.name,
            description = it.description,
            type = it.type,
            object_owner_id = it.owner.id,
            object_owner_name = it.owner.name
        )
    }.toTypedArray()
}

fun List<ObjectUser>.asDatabaseModels(currentUser: Boolean = false): Array<DatabaseObjectUser> {
    return map {
        DatabaseObjectUser (
            object_user_id = 0, // this will get autogenerated
            object_id = it.parenObjectId,
            user_id = it.id,
            user_name = it.name,
            from_date = Date(it.from.time),
            to_date = Date(it.to.time),
            current = currentUser // Set to true afterwards if applicable
        )
    }.toTypedArray()
}
